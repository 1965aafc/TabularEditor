// Code generated by a template
using System;
using System.Linq;
using System.Collections.Generic;
using System.ComponentModel;
using TabularEditor.PropertyGridUI;
using TabularEditor.UndoFramework;
using TOM = Microsoft.AnalysisServices.Tabular;

namespace TabularEditor.TOMWrapper
{
  
    /// <summary>
	/// Base class declaration for DataColumn
	/// </summary>
	[TypeConverter(typeof(DynamicPropertyConverter))]
	public partial class DataColumn: Column
	{
	    protected internal new TOM.DataColumn MetadataObject { get { return base.MetadataObject as TOM.DataColumn; } internal set { base.MetadataObject = value; } }

		/// <summary>
		/// Creates a new DataColumn and adds it to the parent Table.
		/// This constructor also creates the underlying metadataobject and adds it to the TOM.
		/// </summary>
		public DataColumn(Table parent) : base(parent.Handler, new TOM.DataColumn(), false) {
			MetadataObject.Name = parent.MetadataObject.Columns.GetNewName("New DataColumn");
			parent.Columns.Add(this);
			Init();
		}

		/// <summary>
		/// Constructs a wrapper for an existing DataColumn metadataobject in the TOM.
		/// </summary>
		public DataColumn(TabularModelHandler handler, TOM.DataColumn datacolumnMetadataObject) : base(handler, datacolumnMetadataObject)
		{
		}
        /// <summary>
        /// Gets or sets the SourceColumn of the DataColumn.
        /// </summary>
		[DisplayName("Source Column")]
		[Category("Options"),IntelliSense("The Source Column of this DataColumn.")]
		public string SourceColumn {
			get {
			    return MetadataObject.SourceColumn;
			}
			set {
				var oldValue = SourceColumn;
				if (oldValue == value) return;
				bool undoable = true;
				bool cancel = false;
				OnPropertyChanging("SourceColumn", value, ref undoable, ref cancel);
				if (cancel) return;
				MetadataObject.SourceColumn = value;
				if(undoable) Handler.UndoManager.Add(new UndoPropertyChangedAction(this, "SourceColumn", oldValue, value));
				OnPropertyChanged("SourceColumn", oldValue, value);
			}
		}
		private bool ShouldSerializeSourceColumn() { return false; }
    }
}
