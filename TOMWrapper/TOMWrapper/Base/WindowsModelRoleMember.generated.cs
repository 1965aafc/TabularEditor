// Code generated by a template
using System;
using System.Linq;
using System.Collections.Generic;
using System.ComponentModel;
using TabularEditor.PropertyGridUI;
using TabularEditor.UndoFramework;
using TOM = Microsoft.AnalysisServices.Tabular;

namespace TabularEditor.TOMWrapper
{
  
    /// <summary>
	/// Base class declaration for WindowsModelRoleMember
	/// </summary>
	[TypeConverter(typeof(DynamicPropertyConverter))]
	public partial class WindowsModelRoleMember: ModelRoleMember, IClonableObject
	{
	    protected internal new TOM.WindowsModelRoleMember MetadataObject { get { return base.MetadataObject as TOM.WindowsModelRoleMember; } internal set { base.MetadataObject = value; } }




		/// <summary>
		/// Creates a new WindowsModelRoleMember and adds it to the parent ModelRole.
		/// </summary>
		public WindowsModelRoleMember(ModelRole parent) : this(new TOM.WindowsModelRoleMember()) {
			MetadataObject.Name = parent.MetadataObject.Members.GetNewName("New WindowsModelRoleMember");
			parent.Members.Add(this);
		}


		public WindowsModelRoleMember Clone(string newName = null) {
		    Handler.BeginUpdate("Clone WindowsModelRoleMember");

				var tom = MetadataObject.Clone() as TOM.WindowsModelRoleMember;
				tom.Name = Parent.Members.MetadataObjectCollection.GetNewName(string.IsNullOrEmpty(newName) ? tom.Name + " copy" : newName);
				var obj = new WindowsModelRoleMember(tom);

            Handler.EndUpdate();

            return obj;
		}

		TabularNamedObject IClonableObject.Clone(string newName, bool includeTranslations) {
			if (includeTranslations) throw new ArgumentException("This object does not support translations.", "includeTranslations");
			return Clone(newName);
		}

	
        internal override void RenewMetadataObject()
        {
            var tom = new TOM.WindowsModelRoleMember();
            Handler.WrapperLookup.Remove(MetadataObject);
            MetadataObject.CopyTo(tom);
            MetadataObject = tom;
            Handler.WrapperLookup.Add(MetadataObject, this);
        }


		public ModelRole Parent { 
			get {
				return Handler.WrapperLookup[MetadataObject.Parent] as ModelRole;
			}
		}
		
		/// <summary>
		/// Creates a WindowsModelRoleMember object representing an existing TOM WindowsModelRoleMember.
		/// </summary>
		internal WindowsModelRoleMember(TOM.WindowsModelRoleMember metadataObject) : base(metadataObject)
		{
			
		}	
    }
}
