<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>15, 14</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC+
        BwAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABED4AAzABXAIrASoBuAEuAS8BLgFTAwYBCCgAATEBMgExAZ4BKwEsASsBtAME
        AQW4AAMwAVoBAAEBAQAB/wMAAf8DAAH/AxMB5AM0AXgYAAEyATQBMwGWASgCKQG8AwYBCAEFAQgBBgH4
        AwAB/wMRARcDCAELAywBTgEzAjQBcQMRARekAAEwATEBMAFaAwMB+gMAAf8DAAH/AwAB/wMAAf8DEwHk
        DAADNAFyATIBMQEyAaADBgEIAxAB6QMAAf8BFwEYARcBIQEFAQgBBgH4AwAB/wMRARcBNAI1AYABNAI1
        AYADMgFiAiQBIwHJgAADDAEQATQCNQGAAzIBaRQAAS8BMAEvAVcDAwH6AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DEwHkAzQBeAMrAbQDCwEPARUBFwEWAeEDAAH/AxsBKAMQAekDAAH/ARcBGAEXASEBBQEIAQYB+AMA
        Af8DEQEXDAABHgIfAdKAAAE0AjUBgAMAAf8DAAH/AzEBngMIAQsIAAMuAVMDAwH6AwAB/wMAAf8BBQIG
        AfgBAAEBAQAB/wMAAf8DAAH/AxMB5AEdARwBHQHWAwAB/wMiATUBFQIWAeEDAAH/AxsBKAMQAekDAAH/
        ARcBGAEXASEBBQEIAQYB+AMAAf8DEQEXDAABHgIfAdKAAAE0AjUBgAMAAf8BEwEVARMB5AMAAf8CIQEg
        Ac4DFwEhAS4BLwEuAVMBAwEEAQMB+gMAAf8DAAH/AhUBFgHiAyMBNgEJAQoBCAH0AwAB/wMAAf8DEwHk
        AR0BHAEdAdYDAAH/AyIBNQEVAhYB4QMAAf8DGwEoAxAB6QMAAf8BFwEYARcBIQEFAQgBBgH4AwAB/wMR
        ARcMAAEeAh8B0oAAATQCNQGAAwAB/wMeAS0BEwEVARMB5AMAAf8BCwENAQsB8AEDAQQBAwH6AwAB/wMA
        Af8BJgEnASYBwwMRARcDAQECAQkBCgEIAfQDAAH/AwAB/wMTAeQDIgHLAwAB/wMbASgBFQIWAeEDAAH/
        AxsBKAMQAekDAAH/ARcBGAEXASEBBQEIAQYB+AMAAf8DEQEXDAABHgIfAdKAAAE0AjUBgAMAAf8DCwEP
        ARoBIAEaASYBEAERARAB6QMAAf8DAAH/AwAB/wEyAjMBlgMGAQgEAAMBAQIBCQEKAQgB9AMAAf8DAAH/
        AxMB5AMXASEDKQFEBAABHQEfAR0B1AMAAf8BFQIWAR4DEAHpAwAB/wEXARgBFwEhAQUBCAEGAfgDAAH/
        AxEBFwwAAR4CHwHSgAABNAI1AYADAAH/AwsBDwMpAUQBBQEIAQYB+AMAAf8DAAH/AwAB/wMrAbUDDQER
        BAADAQECAQkBCgEIAfQDAAH/AwAB/wMTAeQBGgIbASYDIAExBAABFQIWAR4DIgE1BAABFQIWAeEDAAH/
        AxEBFwEFAQgBBgH4AwAB/wMRARcMAAEeAh8B0oAAATQCNQGAAwAB/wErAiwBSwIJAQgB9AMAAf8DHQHU
        Aw8B6wMAAf8DAAH/ARoBGwEaAdoDHgEtAwEBAgEJAQoBCAH0AwAB/wMAAf8DEwHkATABMQEwAVwDNAF4
        EAADHwEuAykBRAQAAQsBDAELAfADAAH/AwwBEAwAAR4CHwHSgAABNAI1AYADAAH/AQUBCAEGAfgDAAH/
        AS0CLgGtAwsBDwEiASMBIgE1AQsBDQELAfADAAH/AwAB/wMLAfEDLgFTAQkBCgEIAfQDAAH/AwAB/wMT
        AeQBMAExATABXAM0AXgcAAMmAT0DLAFMEAABHgIfAdKAAAE0ATUBNAF9AwAB/wEAAQEBAAH/AzQBeAMB
        AQIIAAMjATYBCwEMAQsB8AMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMTAeQBMAExATABXAM0AXgsAAEa
        ASABGgEmATQBNQE0AXgBKAIpAbyAAAMGAQgDMQFeAyoBRxQAAyMBNwMLAfADAAH/AwAB/wMAAf8DAAH/
        AwAB/wMTAeQBMAExATABXAM0AXgcAAMIAQsDLAFMATIBNAEzAZYDIgHLAy8BqAMxAV4DCAELpAABJQEm
        ASUBPAEJAQoBCAH0AwAB/wMAAf8DAAH/AwAB/wMTAeQBMAExATABXAM0AXgQAAMbASgDNAFyAisBKgG4
        AyYBwwM0AYIBJQImATwDBAEFtAADJgE9AgkBCAH0AwAB/wMAAf8CIQEgAc4DMgFiAywBTAExATIBMQGe
        AwsBDwMsAU0BMgEzATIBmAMiAcsCLwEwAaYDMAFcAxEBF8gAAygBQQMxAZ4DIwE3CAADAgEDAzQBiAMo
        Ab4BNAE1ATQBggMjATcDAgEDqAABQgFNAT4HAAE+AwABKAMAAUADAAEQAwABAQEAAQEFAAGAFwAD/wEA
        Af8B4QH/AY8EAAH/AcAB/AUAAf8BgAHgBQABHwIAAQ4EAAEGAgABDgcAAQ4HAAEOBQACIAEOBQABIAEk
        AQ4GAAE8AY4GAAE/AZ4EAAEGAQABPwH4BAABHwEAAT8BgAQAAf8BgAE8AQcEAAH/AcABAAF/BAAB/wHj
        AQMB/wQACw==
</value>
  </data>
</root>