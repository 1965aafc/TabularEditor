<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>15, 14</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADS
        BgAAAk1TRnQBSQFMAgEBAgEAASgBAAEoAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABED4AAzgBXANUAbgDMwFTAwYBCCgAA08BngNSAbQDBAEFuAADNwFaAwAB/wMA
        Af8DAAH/Az4B5ANDAXgYAANNAZYDUwG8AwYBCAEXARoBGAH4AwAB/wMRARcDCAELAzEBTgNAAXEDEQEX
        pAADNwFaAw8B+gMAAf8DAAH/AwAB/wMAAf8DPgHkDAADQQFyA1EBoAMGAQgDOgHpAwAB/wMYASEBFwEa
        ARgB+AMAAf8DEQEXA0YBgANGAYADOgFiA1MByYAAAwwBEANGAYADPQFpFAADNQFXAw8B+gMAAf8DAAH/
        AwAB/wMAAf8DAAH/Az4B5ANDAXgDUgG0AwsBDwNEAeEDAAH/AxwBKAM6AekDAAH/AxgBIQEXARoBGAH4
        AwAB/wMRARcMAANOAdKAAANGAYADAAH/AwAB/wNPAZ4DCAELCAADMwFTAw8B+gMAAf8DAAH/ARcCGAH4
        AwAB/wMAAf8DAAH/Az4B5ANNAdYDAAH/AyQBNQNEAeEDAAH/AxwBKAM6AekDAAH/AxgBIQEXARoBGAH4
        AwAB/wMRARcMAANOAdKAAANGAYADAAH/AT4BPwE+AeQDAAH/A1IBzgMYASEDMwFTAQ8BEAEPAfoDAAH/
        AwAB/wNCAeIDJAE2ASEBIgEgAfQDAAH/AwAB/wM+AeQDTQHWAwAB/wMkATUDRAHhAwAB/wMcASgDOgHp
        AwAB/wMYASEBFwEaARgB+AMAAf8DEQEXDAADTgHSgAADRgGAAwAB/wMfAS0BPgE/AT4B5AMAAf8BKQEr
        ASkB8AEPARABDwH6AwAB/wMAAf8DUwHDAxEBFwMBAQIBIQEiASAB9AMAAf8DAAH/Az4B5ANSAcsDAAH/
        AxwBKANEAeEDAAH/AxwBKAM6AekDAAH/AxgBIQEXARoBGAH4AwAB/wMRARcMAANOAdKAAANGAYADAAH/
        AwsBDwMbASYDOgHpAwAB/wMAAf8DAAH/A00BlgMGAQgEAAMBAQIBIQEiASAB9AMAAf8DAAH/Az4B5AMY
        ASEDLAFEBAADTwHUAwAB/wMWAR4DOgHpAwAB/wMYASEBFwEaARgB+AMAAf8DEQEXDAADTgHSgAADRgGA
        AwAB/wMLAQ8DLAFEARcBGgEYAfgDAAH/AwAB/wMAAf8DUwG1Aw0BEQQAAwEBAgEhASIBIAH0AwAB/wMA
        Af8DPgHkAxsBJgMhATEEAAMWAR4DJAE1BAADRAHhAwAB/wMRAhcBGgEYAfgDAAH/AxEBFwwAA04B0oAA
        A0YBgAMAAf8DMAFLAiEBIAH0AwAB/wNPAdQDNwHrAwAB/wMAAf8DSgHaAx8BLQMBAQIBIQEiASAB9AMA
        Af8DAAH/Az4B5AM4AVwDQwF4EAADIAEuAywBRAQAASkBKgEpAfADAAH/AwwBEAwAA04B0oAAA0YBgAMA
        Af8BFwEaARgB+AMAAf8DUwGtAwsBDwMkATUBKQErASkB8AMAAf8DAAH/AykB8QMzAVMBIQEiASAB9AMA
        Af8DAAH/Az4B5AM4AVwDQwF4HAADKAE9AzABTBAAA04B0oAAA0UBfQMAAf8DAAH/A0MBeAMBAQIIAAMk
        ATYBKQEqASkB8AMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wM+AeQDOAFcA0MBeCwAAxsBJgNDAXgDUwG8
        gAADBgEIAzgBXgMuAUcUAAMlATcDKQHwAwAB/wMAAf8DAAH/AwAB/wMAAf8DPgHkAzgBXANDAXgcAAMI
        AQsDMAFMA00BlgNSAcsDUAGoAzgBXgMIAQukAAMoATwBIQEiASAB9AMAAf8DAAH/AwAB/wMAAf8DPgHk
        AzgBXANDAXgQAAMcASgDQQFyA1QBuANTAcMDRwGCAygBPAMEAQW0AAMoAT0CIQEgAfQDAAH/AwAB/wNS
        Ac4DOgFiAzABTANPAZ4DCwEPAzABTQNOAZgDUgHLA1EBpgM4AVwDEQEXyAADKgFBA08BngMlATcIAAMC
        AQMDSAGIA1QBvgNHAYIDJQE3AwIBA6gAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcA
        A/8BAAH/AeEB/wGPBAAB/wHAAfwFAAH/AYAB4AUAAR8CAAEOBAABBgIAAQ4HAAEOBwABDgUAAiABDgUA
        ASABJAEOBgABPAGOBgABPwGeBAABBgEAAT8B+AQAAR8BAAE/AYAEAAH/AYABPAEHBAAB/wHAAQABfwQA
        Af8B4wEDAf8EAAs=
</value>
  </data>
</root>